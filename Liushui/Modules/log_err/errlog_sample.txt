
2020-11-11 15:21:32.970 upload {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 308, in post
    res = dic_api[api_name](args)
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 275, in upload
    file = args['file']
KeyError: 'file'

2020-11-11 15:24:02.688 upload {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 309, in post
    res = dic_api[api_name](args)
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 275, in upload
    file = args['file']
KeyError: 'file'

2020-11-11 15:25:44.812 upload {"company": "yikong"}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 309, in post
    res = dic_api[api_name](args)
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api.py", line 275, in upload
    file = args['file']
KeyError: 'file'

2020-11-23 15:25:03.536 process_file {"company": "yikong"}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 368, in post
    res = dic_api[api_name](args)
TypeError: process_file() missing 1 required positional argument: 'args'

2020-11-23 16:30:16.092 process_file {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 384, in get
    res = dic_api[api_name](args)
TypeError: process_file() missing 1 required positional argument: 'args'

2020-11-23 16:30:20.428 process_file {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 384, in get
    res = dic_api[api_name](args)
TypeError: process_file() missing 1 required positional argument: 'args'

2020-11-23 16:31:02.048 process_file {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 384, in get
    res = dic_api[api_name](args)
TypeError: process_file() missing 1 required positional argument: 'args'

2020-11-23 16:31:15.957 process_file {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 384, in get
    res = dic_api[api_name]()
TypeError: process_file() missing 2 required positional arguments: 'file' and 'args'

2020-11-23 16:32:06.441 process_file {}
Traceback (most recent call last):
  File "/Users/vincentl/PycharmProjects/Aita-Tech/Liushui/Modules/flask_api2.py", line 384, in get
    try:
TypeError: process_file() missing 2 required positional arguments: 'file' and 'args'

2020-12-03 17:21:13.801 addrules {"query": "{\"\u672c\u65b9\u94f6\u884c\": \"none\", \"\u7cfb\u7edf\u5206\u7c7b\": \"none\"}", "rule_name": "yikongall.xlsx-Sheet1", "company": "yikong"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 395, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 188, in addrules
    data = matcher.add_rules(query, company, rule_name)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 359, in add_rules
    mongo.insert_data(user_rules, 'user_rule', 'Mapping')
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/mongodb.py", line 10, in insert_data
    x = mycol.insert_one(data)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 701, in insert_one
    session=session),
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 615, in _insert
    bypass_doc_val, session)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 603, in _insert_one
    acknowledged, _insert_command, session)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1498, in _retryable_write
    return self._retry_with_session(retryable, func, s, None)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1384, in _retry_with_session
    return self._retry_internal(retryable, func, session, bulk)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1416, in _retry_internal
    return func(session, sock_info, retryable)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 600, in _insert_command
    _check_write_command_response(result)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/helpers.py", line 230, in _check_write_command_response
    _raise_last_write_error(write_errors)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/helpers.py", line 212, in _raise_last_write_error
    raise WriteError(error.get("errmsg"), error.get("code"), error)
pymongo.errors.WriteError: db already exists with different case already have: [mapping] trying to create [Mapping], full error: {'index': 0, 'code': 13297, 'errmsg': 'db already exists with different case already have: [mapping] trying to create [Mapping]'}

2020-12-03 17:23:01.479 addrules {"query": "{\"\u672c\u65b9\u94f6\u884c\": \"none\", \"\u7cfb\u7edf\u5206\u7c7b\": \"none\"}", "rule_name": "yikongall.xlsx-Sheet1", "company": "yikong"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 395, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 188, in addrules
    data = matcher.add_rules(query, company, rule_name)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 359, in add_rules
    mongo.insert_data(user_rules, 'user_rule', 'Mapping')
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/mongodb.py", line 10, in insert_data
    x = mycol.insert_one(data)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 701, in insert_one
    session=session),
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 615, in _insert
    bypass_doc_val, session)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 603, in _insert_one
    acknowledged, _insert_command, session)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1498, in _retryable_write
    return self._retry_with_session(retryable, func, s, None)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1384, in _retry_with_session
    return self._retry_internal(retryable, func, session, bulk)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/mongo_client.py", line 1416, in _retry_internal
    return func(session, sock_info, retryable)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/collection.py", line 600, in _insert_command
    _check_write_command_response(result)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/helpers.py", line 230, in _check_write_command_response
    _raise_last_write_error(write_errors)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/pymongo/helpers.py", line 212, in _raise_last_write_error
    raise WriteError(error.get("errmsg"), error.get("code"), error)
pymongo.errors.WriteError: db already exists with different case already have: [mapping] trying to create [Mapping], full error: {'index': 0, 'code': 13297, 'errmsg': 'db already exists with different case already have: [mapping] trying to create [Mapping]'}

2020-12-04 17:28:15.591 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:28:30.982 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:30:38.604 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:30:39.883 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:30:51.422 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:31:18.364 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 376, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:35:53.384 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 378, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:36:59.224 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 378, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable

2020-12-04 17:39:27.644 addstats {"query": "{\"self_name\": \"yikong\", \"currency\": \"CNY\", \"self_bank\": \"\"}", "company": "yikong", "file": "yikongall.xlsx", "table": "Sheet1", "batch_id": "test"}
Traceback (most recent call last):
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 397, in post
    res = dic_api[api_name](args)
  File "/home/bank_dev/Aita-Tech/Liushui/Modules/flask_api.py", line 227, in addstats
    data = matcher.add_stats(request, company, file, table, batch_id)
  File "/home/bank_dev/Aita-Tech/Liushui/matcher.py", line 378, in add_stats
    necc_info.update(request)
  File "/home/bank_dev/.local/lib/python3.7/site-packages/werkzeug/local.py", line 378, in <lambda>
    __iter__ = lambda x: iter(x._get_current_object())
TypeError: 'Request' object is not iterable
